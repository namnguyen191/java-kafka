/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
		id "com.diffplug.spotless" version "6.14.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

		// https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation 'org.apache.kafka:kafka-clients:3.3.1'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:1.7.36'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation 'org.slf4j:slf4j-simple:1.7.36'

    // https://search.maven.org/artifact/org.opensearch.client/opensearch-rest-high-level-client/2.5.0/jar
    implementation 'org.opensearch.client:opensearch-rest-high-level-client:2.5.0'

    // https://search.maven.org/artifact/com.google.code.gson/gson/2.9.0/jar
    implementation 'com.google.code.gson:gson:2.9.0'

		// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
 
    // https://mvnrepository.com/artifact/com.launchdarkly/okhttp-eventsource
    implementation 'com.launchdarkly:okhttp-eventsource:3.0.0'
    
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka
    implementation 'org.apache.kafka:kafka_2.13:3.3.2'
}

application {
    // Define the main class for the application.
    mainClass = 'kafka.java.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

spotless {
  java {
    // Use the default importOrder configuration
    importOrder()
    removeUnusedImports()

    googleJavaFormat()
    indentWithSpaces(2)
            
    formatAnnotations()  // fixes formatting of type annotation
  }
}